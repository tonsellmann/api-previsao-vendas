# -*- coding: utf-8 -*-
"""api

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14rUOhmXGBMwlZtdBqbrbKgJubZU7bI6x
"""

# api.py

from flask import Flask, request, jsonify
# Importa a nossa função-núcleo do outro arquivo
from previsor import analisar_e_prever_vendas
import datetime

# Cria a aplicação Flask
app = Flask(__name__)

# Define a rota (URL) da nossa API e os métodos permitidos
@app.route('/prever', methods=['GET'])
def prever():
    # 1. Obter os parâmetros da URL (ex: ?loja=1&mes=9&ano=2026)
    try:
        loja = int(request.args.get('loja'))
        mes = int(request.args.get('mes'))
        ano = int(request.args.get('ano'))
    except (TypeError, ValueError):
        return jsonify({"erro": "Parâmetros 'loja', 'mes' e 'ano' são obrigatórios e devem ser números inteiros."}), 400

    # 2. Validação básica da data
    if not (1 <= mes <= 12 and ano > datetime.datetime.now().year - 2): # Aceita anos razoáveis
        return jsonify({"erro": "Valores de mês ou ano inválidos."}), 400

    # 3. Chamar nossa biblioteca para fazer o trabalho pesado
    resultado = analisar_e_prever_vendas(loja, mes, ano)

    # 4. Retornar o resultado como JSON
    if "erro" in resultado:
        # Se a função de previsão retornou um erro, repassa com o status apropriado
        return jsonify(resultado), 500

    return jsonify(resultado)

# Ponto de partida para executar o servidor
if __name__ == '__main__':
    # Para rodar a API, execute no terminal: python api.py
    # Estará acessível em http://127.0.0.1:5000
    app.run(host='0.0.0.0', port=5000, debug=True)